config:
  name: "Ultimate ZAP Scanner"
  author: "Rikunj Sindhwad"
  usage: "./TaskNinja -w zap_scanner.yaml -v target=ginandjuice.shop"
  defaultimage: "alpine:latest"
  logs: false
  hive: hive

vars:
  target: "" # Target 
  zap_yaml: "https://raw.githubusercontent.com/RikunjSindhwad/Task-Ninja-Workflows/main/Inventory/ZAP_Framework.yaml" # Input context yaml file here // Note: Modify MAX time if using default
  userAgent: "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36"
  blacklist: "swf,woff,woff2,eot,ttf,pngx,svg,gifx,ico,jpg,jpeg,gif,bmp,mp3,mp4,avi,webp,png,css"
  
tasks:
  - name: Gau
    silent: true
    parallel: false
    stoponerr: true
    image: "robensive/gau:latest"
    cmds:
      - '"{{target}}" --fp --retries 5 --threads 200 --blacklist "{{blacklist}}" {{hiveout}}/output.txt'
  - name: Katana
    silent: true
    parallel: false
    stoponerr: false
    image: "projectdiscovery/katana:latest"
    type: dynamic
    dynamicFile: "{{{Gau:file}}}"
    threads: 10
    required:
      - Gau
    mounts:
      - Gau
    cmds:
      - '-u "{{dynamicFile}}" -headers "{{header}}" -js-crawl -omit-raw -omit-body -concurrency 200 -known-files all -extension-filter "{{blacklist}}"  -output {{hiveout}}/output.txt'
  - name: Merge
    silent: true
    required:
      - Katana
    mounts:
      - Katana
    cmds:
      - 'cat {{{Katana:folder}}}/*/out/output.txt| sort -n | uniq > {{hiveout}}/output.txt'
  - name: GetUnique
    silent: true
    parallel: false
    required:
      - Merge
    image: "robensive/urldedupe:latest"
    mounts:
      - Merge
    stoponerr: true
    cmds:
      - '-u {{{Merge:file}}} -s {{hiveout}}/output.txt'
  - name: httpx
    silent: true
    parallel: false
    stoponerr: false
    image: "projectdiscovery/httpx:latest"
    mounts:
      - GetUnique
    cmds:
      - '-l {{{GetUnique:file}}} -mc 200 -output {{hiveout}}/output.txt'
  - name: Create ZAP Workflow 
    silent: true
    parallel: false
    image: "robensive/zap-context_helper:latest"
    mounts:
      - httpx
    inputs:
      - "{{zap_yaml}},zap.yaml"
    cmds:
      - '-u {{{httpx:file}}} -i {{hivein}}/zap.yaml -o {{hiveout}}/output.txt'
  - name: run ZAP
    silent: true
    parallel: false
    image: "ghcr.io/zaproxy/zaproxy:stable"
    dockerhive: "/zap/wrk"
    mounts:
      - Create ZAP Workflow
    cmds:
      - zap.sh -cmd -autorun {{{Create ZAP Workflow:file}}}
  - name: Result-Check
    silent: false
    parallel: false
    image: "robensive/csvkit:latest"
    mounts:
      - run ZAP
    required:
      - run ZAP
    cmds:
      - result=$(find {{{run ZAP:folder}}} -type f -name '*.json')
      - echo "Vulnerability","Severity","URL","Parameter","Method","Evidence" > {{hiveout}}/result.csv
      - jq -r '.site[].alerts[] | select(.instances) as $alert | .instances[] | [$alert.name, $alert.riskdesc, .uri, .param, .method, .evidence] | @csv' $result >> {{hiveout}}/result.csv
      - echo result saved in {{hosthiveout}}/result.csv
      - cat {{hiveout}}/result.csv | csvlook -S --blanks  --max-column-width 100 --max-rows 10
